<!DOCTYPE html>
<html>

<head>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    
        <title>AudioScanner!</title>
        <style>
            body {
                display: flex;
                flex-direction: column;
                align-items: center;
            }

            button {
                width: 100px;
                height: 100px;
            }
        </style>
    </head>
</head>
<script src="/recognizer.js"></script>
<script src="/math.js"></script>
<body>
    <label for="channel">Channel ID (10-100):</label>
    <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
    
        <input type="number" id="id" name="id" style="display:block; margin: 20px 0;" value=<%= id %>>
        <button onpointerdown="hold(0,1,0)" onpointerup="release(0,1,0)">Up</button>
        <div id="a" style="display:inline-block;">
            <button onpointerdown="hold(-1,0,0)" onpointerup="release(-1,0,0)">Left</button>
            <button onpointerdown="hold(1,0,0)" onpointerup="release(1,0,0)">Right</button>
        </div>
        <button onpointerdown="hold(0,-1,0)" onpointerup="release(0,-1,0)">Down</button>
        <div id="angle" style="display:block; margin: 20px 0;">0°</div>
        <div style="display:block; margin: 20px 0;">
            <input type="range" id="zslider" name="zslider" min="-360" max="360" value="0" 
                   oninput="move(0,0,parseInt(this.value) - testZ)"
                   style="width: 200px;">
        </div>
        <div style="display:block; margin: 20px 0;" id="xyz"></div>
        <label for="text">Transcript</label>
        <input type="text" id="text" name="transcript">
        <button onpointerdown="recognition.start()">Record</button>
        <button onpointerdown="start()">Start</button>

    <script>

    var testX = 0;
    var testY = 0;
    var testZ = 0;

    var handles = [0,0,0,0,0];

    const maxWidth = 5;
    const scale = 1/50;

    function encodeXY(x,y) {
        return y*maxWidth + x;
    }

    function move(x,y,z) {
        testX += x;
        testY += y;
        testZ += z;

        console.log(testX, testY, testZ);
        document.getElementById('angle').innerHTML = testZ+ "°";
    }

    function hold(x,y,z) {
        handles[0] = setInterval(move, 100, x, y, z);
        handles[1] = setInterval(move, 100, x, y, z);
        handles[2] = setInterval(move, 100, x, y, z);
    }

    function release(x,y,z) {
        clearInterval(handles[0]);
        clearInterval(handles[1]);
        clearInterval(handles[2]);
    }

    function result(e) {
        if (transcriptWords.length > 0) {
            transcriptWords = "";
        }
    }

    function update() {

        console.log(transcriptWords);
        if (Cstatus)
            document.getElementById('text').value = transcriptWords;

            const id = document.getElementById('id');
            const data = {"id": id.value, "px": testX*scale, "py": testY*scale, "theta": testZ, "cxy": encodeXY(testX*scale, testY*scale), "timestamp": Date().toString(), "transcript": transcriptWords}

            document.getElementById('xyz').innerHTML = data.px + ", " + data.py + ", " + data.theta;
            sendPacket('/convo-ts', "POST", data, true, result, null);
    }

    function send() {
        transcriptWords = document.getElementById('text').value;
        document.getElementById('text').value = ""
    }
    function start() {
        handles[3] = setInterval(update, 100);
        handles[4] = setInterval(send, 2000);
    }

    </script>
</body>

</html>